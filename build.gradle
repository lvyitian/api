plugins {
    id 'java'
    id 'signing'
    id 'maven'
    id 'maven-publish'
}

group 'club.issizler.okyanus'
version "0.2.0-SNAPSHOT"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // For use with mods, should already be included in the template
    implementation 'com.electronwill.night-config:toml:3.4.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.8.1'

    // Used internally, can be usable by mods
    implementation 'org.apache.commons:commons-lang3:3.5'
}

javadoc {
    exclude "**/_*.java" // Hide my embarrassment
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = "Okyanus API"
                description = "Serverside API for Fabric"
                url = "https://okyanus-mc.github.io/"

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'admicos'
                        name = 'Ecmel Berk CanlÄ±er'
                        email = 'me@ecmelberk.com'
                    }
                }
            }

            groupId = "${group}"
            artifactId = 'api'
            version = getVersion()

            from components.java
            artifact sourcesJar
        }
    }

    repositories {
        maven {
            url = "https://maven.issizler.club"

            if (project.hasProperty("nexusPassword")) {
                credentials {
                    username "admin"
                    password "${nexusPassword}"
                }
            }
        }
    }
}

signing {
    required { project.hasProperty('release') }
    sign publishing.publications.mavenJava
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        }
    }
}
